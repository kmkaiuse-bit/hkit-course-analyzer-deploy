/**
 * ÈÄ≤ÈöéÂåØÂá∫ÁÆ°ÁêÜÊ®°ÁµÑ
 * Âæû test-ui.html Êï¥ÂêàËÄå‰æÜÔºåÊèê‰æõÂ∞àÊ•≠ÁöÑ Excel Âíå PDF ÂåØÂá∫ÂäüËÉΩ
 */

const AdvancedExporter = {
    /**
     * ÂàùÂßãÂåñÈÄ≤ÈöéÂåØÂá∫ÁÆ°ÁêÜÂô®
     */
    init() {
        this.setupEventListeners();
        console.log('‚úÖ AdvancedExporter initialized');
        
        // Ê∏¨Ë©¶ÊåâÈàïÊòØÂê¶Â≠òÂú®
        this.checkButtons();
    },

    /**
     * Ê™¢Êü•ÊåâÈàïÊòØÂê¶Â≠òÂú®ÔºàÁî®ÊñºÈô§ÈåØÔºâ
     */
    checkButtons() {
        const csvBtn = document.getElementById('downloadBtn');
        const excelBtn = document.getElementById('downloadExcelBtn');
        const pdfBtn = document.getElementById('downloadPdfBtn');
        
        console.log('üîç Ê™¢Êü•ÂåØÂá∫ÊåâÈàïÁãÄÊÖã:');
        console.log('  CSV ÊåâÈàï:', csvBtn ? '‚úÖ Â≠òÂú®' : '‚ùå ‰∏çÂ≠òÂú®');
        console.log('  Excel ÊåâÈàï:', excelBtn ? '‚úÖ Â≠òÂú®' : '‚ùå ‰∏çÂ≠òÂú®');
        console.log('  PDF ÊåâÈàï:', pdfBtn ? '‚úÖ Â≠òÂú®' : '‚ùå ‰∏çÂ≠òÂú®');
        
        if (csvBtn) console.log('  CSV ÊåâÈàïÁï∂ÂâçÈ°ØÁ§∫ÁãÄÊÖã:', csvBtn.style.display);
        if (excelBtn) console.log('  Excel ÊåâÈàïÁï∂ÂâçÈ°ØÁ§∫ÁãÄÊÖã:', excelBtn.style.display);
        if (pdfBtn) console.log('  PDF ÊåâÈàïÁï∂ÂâçÈ°ØÁ§∫ÁãÄÊÖã:', pdfBtn.style.display);
    },

    /**
     * Ë®≠ÁΩÆ‰∫ã‰ª∂Áõ£ËÅΩÂô®
     */
    setupEventListeners() {
        // Excel ÂåØÂá∫ÊåâÈàï
        const excelBtn = document.getElementById('downloadExcelBtn');
        if (excelBtn) {
            excelBtn.addEventListener('click', () => this.downloadExcelApplication());
        }

        // PDF ÂåØÂá∫ÊåâÈàï
        const pdfBtn = document.getElementById('downloadPdfBtn');
        if (pdfBtn) {
            pdfBtn.addEventListener('click', () => this.generatePdfApplication());
        }

        // Êï¥Âêà CSV ÂåØÂá∫ÊåâÈàï
        const csvBtn = document.getElementById('downloadBtn');
        if (csvBtn) {
            csvBtn.addEventListener('click', () => this.downloadIntegratedResults());
        }
    },

    /**
     * ‰∏ãËºâÊï¥ÂêàÂ≠∏ÁîüË≥áË®äÁöÑÂàÜÊûêÁµêÊûú (CSV)
     */
    downloadIntegratedResults() {
        try {
            const currentData = this.getCurrentData();
            if (!currentData || currentData.length === 0) {
                alert('Ê≤íÊúâÂèØÂåØÂá∫ÁöÑÊï∏ÊìöÔºÅ');
                return;
            }

            const studentInfo = this.getStudentInfo();

            // Êï¥ÂêàÂ≠∏ÁîüË≥áË®äÂà∞ÊØè‰∏ÄË°å
            const integratedData = currentData.map(row => ({
                'Student Name': studentInfo.name || 'Êú™Â°´ÂØ´',
                'Application Number': studentInfo.applicationNumber || 'Êú™Â°´ÂØ´',
                'Applied Programme': studentInfo.appliedProgramme || 'Êú™Â°´ÂØ´',
                ...row
            }));

            // ÁîüÊàê CSV ÂÖßÂÆπ
            const headers = Object.keys(integratedData[0]);
            const csvHeaders = headers.map(h => `"${h}"`).join(',');
            const csvRows = integratedData.map(row => 
                headers.map(h => {
                    let value = row[h] || '';
                    // Ê∏ÖÁêÜ HTML Ê®ôÁ±§ÔºàÁî®Êñº Exemption Granted Ê¨Ñ‰ΩçÔºâ
                    if (typeof value === 'string' && value.includes('<')) {
                        value = value.includes('‚úÖ') ? 'true' : 'false';
                    }
                    return `"${value.toString().replace(/"/g, '""')}"`;
                }).join(',')
            );
            
            const csvContent = [csvHeaders, ...csvRows].join('\n');

            // ‰∏ãËºâÊ™îÊ°à
            this.downloadFile(csvContent, 'text/csv', this.generateFilename('csv'));
            console.log('‚úÖ CSV ÂåØÂá∫ÊàêÂäü');

        } catch (error) {
            console.error('CSV ÂåØÂá∫Â§±Êïó:', error);
            alert('CSV ÂåØÂá∫Â§±ÊïóÔºåË´ãÈáçË©¶');
        }
    },

    /**
     * ‰∏ãËºâ Excel Ê†ºÂºèÁöÑÊ≠£ÂºèÁî≥Ë´ãË°®
     */
    downloadExcelApplication() {
        try {
            const currentData = this.getCurrentData();
            if (!currentData || currentData.length === 0) {
                alert('Ê≤íÊúâÂèØÂåØÂá∫ÁöÑÊï∏ÊìöÔºÅ');
                return;
            }

            const studentInfo = this.getStudentInfo();

            // Ê™¢Êü•ÊòØÂê¶Êúâ SheetJS
            if (typeof XLSX === 'undefined') {
                alert('Excel ÂåØÂá∫ÂäüËÉΩ‰∏çÂèØÁî®ÔºåË´ãÁ¢∫‰øù SheetJS Â∑≤ËºâÂÖ•');
                return;
            }

            // ‰ΩøÁî® SheetJS ÂâµÂª∫ÁúüÊ≠£ÁöÑ Excel Ê™îÊ°à
            const wb = {
                Sheets: {},
                SheetNames: ['HDC'],
                Props: {
                    Title: 'Application for Advanced Standing',
                    Subject: 'Course Exemption Analysis',
                    Author: 'HKIT Course Exemption System',
                    CreatedDate: new Date()
                }
            };

            const ws = {};
            
            // Â≠∏ÁîüË≥áË®ä
            const studentName = studentInfo.name || 'Êú™Â°´ÂØ´';
            const applicationNo = studentInfo.applicationNumber || 'Êú™Â°´ÂØ´';
            const programme = studentInfo.appliedProgramme ? 
                studentInfo.appliedProgramme.replace('Higher Diploma in ', '') + ' Stream' : 'Êú™Â°´ÂØ´';
            const currentYear = new Date().getFullYear();
            
            // Ë®≠ÂÆöÂÑ≤Â≠òÊ†ºÂÖßÂÆπ
            // Ê®ôÈ°åÂçÄÂüü
            ws['A1'] = { v: 'APPLICATION FOR ADVANCED STANDING', t: 's' };
            
            // Â≠∏Ê†°Ë≥áË®ä
            ws['A3'] = { v: 'Hong Kong Institute of Technology', t: 's' };
            ws['A4'] = { v: 'Higher Diploma of Science and Technology', t: 's' };
            
            // Â≠∏ÁîüË≥áË®ä - Ë°®Ê†ºÊ†ºÂºè
            ws['A6'] = { v: 'Name of Student: ', t: 's' };
            ws['B6'] = { v: studentName, t: 's' };
            ws['C6'] = { v: programme, t: 's' };
            
            ws['A7'] = { v: 'Intake Year (HKIT Higher Diploma): ', t: 's' };
            ws['B7'] = { v: `T${currentYear}C`, t: 's' };
            ws['C7'] = { v: 'Year 2', t: 's' };
            
            ws['A8'] = { v: 'Application No.: ', t: 's' };
            ws['B8'] = { v: applicationNo, t: 's' };
            
            // Ë™™ÊòéÊñáÂ≠ó
            ws['A10'] = { v: 'Total subjects require to study in Higher Diploma:', t: 's' };
            
            // Ë°®Ê†ºÊ®ôÈ°å
            ws['A12'] = { v: 'HKIT Subject Code', t: 's' };
            ws['B12'] = { v: 'HKIT Subject Name', t: 's' };
            ws['C12'] = { v: 'Exemption Granted / study plan', t: 's' };
            ws['D12'] = { v: 'Subject Name of Previous Studies', t: 's' };
            
            // Ë™≤Á®ãË≥áÊñô
            let currentRow = 14; // Á¨¨14Ë°åÈñãÂßãÊîæË™≤Á®ãË≥áÊñô
            currentData.forEach((row, index) => {
                const isExempted = row['Exemption Granted'] === true || row['Exemption Granted'] === 'true';
                const exemptionStatus = row['Exemption Granted / study plan'] || (isExempted ? 'Exempted' : '');
                const previousStudies = row['Subject Name of Previous Studies'] === 'NA' ? '' : (row['Subject Name of Previous Studies'] || '');
                
                const cellRow = currentRow + index;
                const cellA = `A${cellRow}`;
                const cellB = `B${cellRow}`;
                const cellC = `C${cellRow}`;
                const cellD = `D${cellRow}`;
                
                ws[cellA] = { v: row['HKIT Subject Code'] || '', t: 's' };
                ws[cellB] = { v: row['HKIT Subject Name'] || '', t: 's' };
                ws[cellC] = { v: exemptionStatus, t: 's' };
                ws[cellD] = { v: previousStudies, t: 's' };
            });
            
            // Â∫ïÈÉ®Ë≥áË®ä
            const lastDataRow = currentRow + currentData.length;
            ws[`A${lastDataRow + 2}`] = { v: 'Total Units of Advanced Standing Approved:', t: 's' };
            ws[`A${lastDataRow + 4}`] = { v: 'Intake Level Approved:', t: 's' };
            ws[`A${lastDataRow + 5}`] = { v: '*delete as appropriate', t: 's' };
            ws[`A${lastDataRow + 7}`] = { v: 'Signature:', t: 's' };
            ws[`A${lastDataRow + 8}`] = { v: 'Programme Leader (Higher Diploma of Science and Technology)', t: 's' };
            
            // Ë®≠ÂÆöÂ∑•‰ΩúË°®ÁØÑÂúç
            const range = XLSX.utils.encode_range({
                s: { c: 0, r: 0 }, // A1
                e: { c: 6, r: lastDataRow + 8 } // GÂà∞ÊúÄÂæå‰∏ÄË°å
            });
            ws['!ref'] = range;
            
            // Ë®≠ÂÆöÂêà‰ΩµÂÑ≤Â≠òÊ†º
            ws['!merges'] = [
                // Ê®ôÈ°å
                { s: { c: 0, r: 0 }, e: { c: 6, r: 0 } }, // A1:G1
                // Â≠∏Ê†°Ë≥áË®ä
                { s: { c: 0, r: 2 }, e: { c: 6, r: 2 } }, // A3:G3
                { s: { c: 0, r: 3 }, e: { c: 6, r: 3 } }, // A4:G4
            ];
            
            // Ë®≠ÂÆöÊ¨ÑÂØ¨
            ws['!cols'] = [
                { wch: 15 }, // A: HKIT Subject Code
                { wch: 40 }, // B: HKIT Subject Name
                { wch: 20 }, // C: Exemption Granted / study plan
                { wch: 50 }, // D: Subject Name of Previous Studies
                { wch: 8 },  // E: Yes
                { wch: 8 },  // F: No
                { wch: 30 }  // G: Remarks
            ];
            
            // Â∞áÂ∑•‰ΩúË°®Âä†ÂÖ•Â∑•‰ΩúÁ∞ø
            wb.Sheets['HDC'] = ws;
            
            // ÁîüÊàê Excel Ê™îÊ°à
            const excelBuffer = XLSX.write(wb, { 
                bookType: 'xlsx', 
                type: 'array',
                cellStyles: true,
                bookSST: false
            });
            
            // ‰∏ãËºâÊ™îÊ°à
            const blob = new Blob([excelBuffer], { 
                type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' 
            });
            
            this.downloadBlob(blob, this.generateFilename('xlsx', 'Advanced-Standing-Application'));
            console.log('‚úÖ Excel Áî≥Ë´ãË°®ÂåØÂá∫ÊàêÂäü');

        } catch (error) {
            console.error('Excel ÂåØÂá∫Â§±Êïó:', error);
            alert('Excel ÂåØÂá∫Â§±ÊïóÔºåË´ãÈáçË©¶');
        }
    },

    /**
     * ÁîüÊàêPDFÁî≥Ë´ãË°®
     */
    generatePdfApplication() {
        try {
            const currentData = this.getCurrentData();
            if (!currentData || currentData.length === 0) {
                alert('Ê≤íÊúâÂèØÂåØÂá∫ÁöÑÊï∏ÊìöÔºÅ');
                return;
            }

            const studentInfo = this.getStudentInfo();
            
            // ÂâµÂª∫Êñ∞ÁöÑÁ™óÂè£Áî®ÊñºPDFÊâìÂç∞
            const printWindow = window.open('', '_blank', 'width=210mm,height=297mm');
            
            // Â≠∏ÁîüË≥áË®ä
            const studentName = studentInfo.name || 'Êú™Â°´ÂØ´';
            const applicationNo = studentInfo.applicationNumber || 'Êú™Â°´ÂØ´';
            const programme = studentInfo.appliedProgramme ? 
                studentInfo.appliedProgramme.replace('Higher Diploma in ', '') + ' Stream' : 'Êú™Â°´ÂØ´';
            const currentYear = new Date().getFullYear();
            
            // Áµ±Ë®àË±ÅÂÖçË™≤Á®ãÊï∏
            const exemptedCount = currentData.filter(row => 
                row['Exemption Granted'] === true || row['Exemption Granted'] === 'true'
            ).length;
            
            // ÁîüÊàêHTMLÂÖßÂÆπ - ÂÆåÂÖ®ÊåâÁÖßÂ≠∏Ê†°Ê†ºÂºèË¶ÅÊ±Ç
            const htmlContent = this.generatePdfHtmlContent(studentName, applicationNo, programme, currentYear, currentData);
            
            printWindow.document.write(htmlContent);
            printWindow.document.close();
            
            // Á≠âÂæÖÂÖßÂÆπËºâÂÖ•ÂæåËÅöÁÑ¶
            printWindow.onload = function() {
                setTimeout(function() {
                    printWindow.focus();
                }, 300);
            };
            
            console.log('‚úÖ PDFÁî≥Ë´ãË°®Â∑≤ÁîüÊàê');
            
        } catch (error) {
            console.error('PDF ÁîüÊàêÂ§±Êïó:', error);
            alert('PDF ÁîüÊàêÂ§±ÊïóÔºåË´ãÈáçË©¶');
        }
    },

    /**
     * ÁîüÊàê PDF HTML ÂÖßÂÆπ
     */
    generatePdfHtmlContent(studentName, applicationNo, programme, currentYear, currentData) {
        return `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>Advanced Standing Application - ${studentName}</title>
            <style>
                @page {
                    margin: 15mm;
                    size: A4;
                }
                body {
                    font-family: Arial, 'Microsoft YaHei', sans-serif;
                    font-size: 11px;
                    line-height: 1.2;
                    color: #000;
                    margin: 0;
                    padding: 0;
                }
                
                .header-section {
                    margin-bottom: 20px;
                }
                .main-title {
                    font-size: 16px;
                    font-weight: bold;
                    text-align: center;
                    margin-bottom: 15px;
                    text-decoration: underline;
                }
                .school-info {
                    font-size: 13px;
                    font-weight: bold;
                    text-align: center;
                    margin-bottom: 5px;
                }
                .student-info-section {
                    margin: 15px 0;
                }
                .student-info-table {
                    border: 3px solid #000;
                    border-collapse: collapse;
                    margin: 15px 0;
                    width: 70%;
                    font-size: 11px;
                }
                .student-info-table td {
                    border: 1px solid #000;
                    padding: 8px 10px;
                    font-weight: normal;
                }
                .student-info-label {
                    background-color: #f8f8f8;
                    font-weight: bold;
                    width: 30%;
                }
                .total-subjects-line {
                    margin: 15px 0 10px 0;
                    font-weight: bold;
                }
                
                .course-table {
                    width: 100%;
                    border-collapse: collapse;
                    margin: 10px 0 20px 0;
                    font-size: 10px;
                }
                .course-table th {
                    border: 1px solid #000;
                    padding: 6px 4px;
                    text-align: center;
                    vertical-align: middle;
                    font-weight: bold;
                    background-color: #f8f8f8;
                }
                .course-table td {
                    border: 1px solid #000;
                    padding: 6px 4px;
                    text-align: left;
                    vertical-align: top;
                    font-weight: normal;
                }
                .col-a { width: 15%; }
                .col-b { width: 35%; }
                .col-c { width: 18%; }
                .col-d { width: 32%; }
                
                .text-center { text-align: center; }
                .exempted-row { background-color: #ffffff; }
                .not-exempted-row { background-color: #ffffff; }
                
                .signature-section {
                    margin-top: 25px;
                    margin-bottom: 20px;
                }
                .signature-line {
                    border-bottom: 1px solid #000;
                    display: inline-block;
                    width: 300px;
                    margin-left: 10px;
                    margin-bottom: 0px;
                }
                .additional-info {
                    margin: 15px 0;
                    font-weight: normal;
                }
                .approval-section {
                    margin: 20px 0;
                }
                .note {
                    font-style: italic;
                    font-size: 9px;
                    margin: 5px 0;
                }
                .programme-leader {
                    text-align: left;
                    font-weight: bold;
                    margin-top: 15px;
                }
                
                @media print {
                    body { 
                        print-color-adjust: exact;
                        -webkit-print-color-adjust: exact;
                    }
                    .no-print { display: none; }
                    @page { margin: 15mm; }
                }
            </style>
        </head>
        <body>
            <div class="header-section">
                <div class="main-title">APPLICATION FOR ADVANCED STANDING</div>
                <div class="school-info">Hong Kong Institute of Technology</div>
                <div class="school-info">Higher Diploma of Science and Technology</div>
            </div>
            
            <div class="student-info-section">
                <table class="student-info-table">
                    <tr>
                        <td class="student-info-label">Name of Student:</td>
                        <td>${studentName}</td>
                        <td>${programme}</td>
                    </tr>
                    <tr>
                        <td class="student-info-label">Intake Year (HKIT Higher Diploma):</td>
                        <td>T${currentYear}C</td>
                        <td>Year 2</td>
                    </tr>
                    <tr>
                        <td class="student-info-label">Application No.:</td>
                        <td>${applicationNo}</td>
                        <td></td>
                    </tr>
                </table>
            </div>
            
            <div class="total-subjects-line">Total subjects require to study in Higher Diploma:</div>
            
            <table class="course-table">
                <thead>
                    <tr>
                        <th class="col-a">HKIT Subject Code</th>
                        <th class="col-b">HKIT Subject Name</th>
                        <th class="col-c">Exemption Granted / study plan</th>
                        <th class="col-d">Subject Name of Previous Studies</th>
                    </tr>
                </thead>
                <tbody>
                    ${currentData.map(row => {
                        const isExempted = row['Exemption Granted'] === true || row['Exemption Granted'] === 'true';
                        const exemptionStatus = row['Exemption Granted / study plan'] || (isExempted ? 'Exempted' : '');
                        const previousStudies = row['Subject Name of Previous Studies'] === 'NA' ? '' : (row['Subject Name of Previous Studies'] || '');
                        const rowClass = isExempted ? 'exempted-row' : 'not-exempted-row';
                        
                        return `
                            <tr class="${rowClass}">
                                <td class="col-a">${row['HKIT Subject Code'] || ''}</td>
                                <td class="col-b">${row['HKIT Subject Name'] || ''}</td>
                                <td class="col-c text-center">${exemptionStatus}</td>
                                <td class="col-d">${previousStudies}</td>
                            </tr>
                        `;
                    }).join('')}
                </tbody>
            </table>
            
            <div class="approval-section">
                <div style="margin-bottom: 10px;">
                    <strong>Total Units of Advanced Standing Approved:</strong> _______________
                </div>
                
                <div style="margin-bottom: 10px;">
                    <strong>Intake Level Approved:</strong> _______________
                </div>
                
                <div class="note">*delete as appropriate</div>
            </div>
            
            <div class="signature-section">
                <div style="margin-bottom: 15px;">
                    Signature: <span class="signature-line"></span>
                </div>
            </div>
            
            <div class="programme-leader">
                Programme Leader (Higher Diploma of Science and Technology)
            </div>
            
            <div class="no-print" style="margin-top: 30px; text-align: center; padding: 20px; border-top: 2px solid #ddd;">
                <h3 style="margin-bottom: 15px; color: #333;">PDFÁîüÊàêÈÅ∏È†Ö</h3>
                <button onclick="window.print()" style="padding: 12px 24px; font-size: 14px; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; margin-right: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">üñ®Ô∏è ÊâìÂç∞/‰øùÂ≠òÁÇ∫PDF</button>
                <button onclick="window.close()" style="padding: 12px 24px; font-size: 14px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; margin-left: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">‚ùå ÈóúÈñâÁ™óÂè£</button>
                <div style="margin-top: 15px; font-size: 12px; color: #666; line-height: 1.4;">
                    üí° <strong>ÊèêÁ§∫:</strong> ÈªûÊìä„ÄåÊâìÂç∞/‰øùÂ≠òÁÇ∫PDF„ÄçÂæåÔºåÂú®ÊâìÂç∞Â∞çË©±Ê°Ü‰∏≠ÈÅ∏Êìá„ÄåÂè¶Â≠òÁÇ∫PDF„Äç<br>
                    üìã Ê≠§Ê†ºÂºèÂÆåÂÖ®Á¨¶ÂêàÂ≠∏Ê†°Ë¶ÅÊ±ÇÔºåÂèØÁõ¥Êé•Êèê‰∫§‰ΩøÁî®
                </div>
            </div>
        </body>
        </html>
        `;
    },

    /**
     * Áç≤ÂèñÁï∂ÂâçÊï∏Êìö
     */
    getCurrentData() {
        // ÂÑ™ÂÖàÂæû EditModeController Áç≤Âèñ
        if (typeof EditModeController !== 'undefined' && EditModeController.getCurrentData) {
            return EditModeController.getCurrentData();
        }
        
        // ÂÖ∂Ê¨°Âæû ResultsDisplay Áç≤Âèñ
        if (typeof ResultsDisplay !== 'undefined' && ResultsDisplay.currentResults) {
            return ResultsDisplay.currentResults;
        }
        
        return null;
    },

    /**
     * Áç≤ÂèñÂ≠∏ÁîüË≥áË®ä
     */
    getStudentInfo() {
        if (typeof StudentInfoManager !== 'undefined' && StudentInfoManager.getStudentInfo) {
            return StudentInfoManager.getStudentInfo();
        }
        return { name: '', applicationNumber: '', appliedProgramme: '' };
    },

    /**
     * ÁîüÊàêÊ™îÊ°àÂêçÁ®±
     */
    generateFilename(extension, prefix = 'course-exemption-analysis') {
        const timestamp = new Date().toISOString().slice(0, 19).replace(/[T:]/g, '-');
        const studentInfo = this.getStudentInfo();
        const studentName = studentInfo.name ? `-${studentInfo.name.replace(/[^a-zA-Z0-9\u4e00-\u9fff]/g, '')}` : '';
        return `${prefix}${studentName}-${timestamp}.${extension}`;
    },

    /**
     * ‰∏ãËºâÊ™îÊ°à
     */
    downloadFile(content, mimeType, filename) {
        const blob = new Blob([content], { type: mimeType + ';charset=utf-8;' });
        this.downloadBlob(blob, filename);
    },

    /**
     * ‰∏ãËºâ Blob
     */
    downloadBlob(blob, filename) {
        const link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.download = filename;
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    },

    /**
     * È°ØÁ§∫ÂåØÂá∫ÊåâÈàï
     */
    showExportButtons() {
        const csvBtn = document.getElementById('downloadBtn');
        const excelBtn = document.getElementById('downloadExcelBtn');
        const pdfBtn = document.getElementById('downloadPdfBtn');
        
        if (csvBtn) {
            csvBtn.style.display = 'inline-block';
            csvBtn.classList.remove('hidden');
        }
        if (excelBtn) {
            excelBtn.style.display = 'inline-block';
            excelBtn.classList.remove('hidden');
        }
        if (pdfBtn) {
            pdfBtn.style.display = 'inline-block';
            pdfBtn.classList.remove('hidden');
        }
        
        console.log('‚úÖ Â∞àÊ•≠ÂåØÂá∫ÊåâÈàïÂ∑≤È°ØÁ§∫');
    },

    /**
     * Èö±ËóèÂåØÂá∫ÊåâÈàï
     */
    hideExportButtons() {
        const csvBtn = document.getElementById('downloadBtn');
        const excelBtn = document.getElementById('downloadExcelBtn');
        const pdfBtn = document.getElementById('downloadPdfBtn');
        
        if (csvBtn) {
            csvBtn.style.display = 'none';
            csvBtn.classList.add('hidden');
        }
        if (excelBtn) {
            excelBtn.style.display = 'none';
            excelBtn.classList.add('hidden');
        }
        if (pdfBtn) {
            pdfBtn.style.display = 'none';
            pdfBtn.classList.add('hidden');
        }
        
        console.log('üôà Â∞àÊ•≠ÂåØÂá∫ÊåâÈàïÂ∑≤Èö±Ëóè');
    }
};

// ÂÖ®ÂüüÂáΩÊï∏Ôºà‰æõ HTML onclick ‰ΩøÁî®Ôºâ
window.downloadIntegratedResults = () => AdvancedExporter.downloadIntegratedResults();
window.downloadExcelApplication = () => AdvancedExporter.downloadExcelApplication();
window.generatePdfApplication = () => AdvancedExporter.generatePdfApplication();

// Ê∏¨Ë©¶ÂáΩÊï∏Ôºà‰æõÁ∑®Á®ãÊ∏¨Ë©¶‰ΩøÁî®Ôºâ
window.testShowExportButtons = () => {
    console.log('üîß ÊâãÂãïËß∏ÁôºÈ°ØÁ§∫ÂåØÂá∫ÊåâÈàï...');
    AdvancedExporter.showExportButtons();
};

window.testHideExportButtons = () => {
    console.log('üîß ÊâãÂãïËß∏ÁôºÈö±ËóèÂåØÂá∫ÊåâÈàï...');
    AdvancedExporter.hideExportButtons();
};